# coding: utf-8

"""
    サンプルAPI

    これはOpenAPI仕様のサンプルです。 基本的なCRUD操作を提供するREST APIを定義しています。 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from fastapi import FastAPI, Request
from starlette.middleware.base import BaseHTTPMiddleware
import uuid

from openapi_server.apis.users_api import router as UsersApiRouter
from openapi_server.logger import get_logger

class TraceMiddleware(BaseHTTPMiddleware):
    """
    リクエストからX-Trace-IDを取得し、ロガーに設定するミドルウェア(ここだけ手動)
    """
    async def dispatch(self, request: Request, call_next):
        # リクエストからX-Trace-IDを取得
        trace_id = request.headers.get('X-Trace-ID')
        
        # X-Trace-IDがない場合は新規生成
        if not trace_id:
            trace_id = str(uuid.uuid4())
            
        # ロガーにTrace IDを設定
        logger = get_logger()
        logger.set_trace_id(trace_id)
        
        # リクエスト処理を実行
        response = await call_next(request)
        
        # レスポンスヘッダーにTrace IDを追加
        response.headers['X-Trace-ID'] = trace_id
        
        return response

app = FastAPI(
    title="サンプルAPI",
    description="これはOpenAPI仕様のサンプルです。 基本的なCRUD操作を提供するREST APIを定義しています。 ",
    version="1.0.0",
)

# トレースミドルウェアを追加
app.add_middleware(TraceMiddleware)

app.include_router(UsersApiRouter)
