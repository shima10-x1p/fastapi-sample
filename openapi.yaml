openapi: 3.0.3
info:
  description: |
    これはOpenAPI仕様のサンプルです。
    基本的なCRUD操作を提供するREST APIを定義しています。
  title: サンプルAPI
  version: 1.0.0
servers:
- description: 本番環境
  url: https://api.example.com/v1
- description: 開発環境
  url: https://dev-api.example.com/v1
- description: ローカル開発環境
  url: http://localhost:8000
tags:
- description: ユーザー関連の操作
  name: users
paths:
  /users:
    get:
      description: システムに登録されているすべてのユーザーの一覧を取得します
      operationId: getUsers
      parameters:
      - description: トレーサビリティID(UUID形式)。指定しない場合は自動生成されます
        explode: false
        in: header
        name: X-Trace-ID
        required: false
        schema:
          type: string
        style: simple
      - description: スキップするレコード数
        explode: true
        in: query
        name: skip
        required: false
        schema:
          default: "0"
          type: string
        style: form
      - description: 取得するレコード数の上限
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "100"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: 成功
      summary: ユーザー一覧を取得
      tags:
      - users
    post:
      description: 新しいユーザーを作成します
      operationId: createUser
      parameters:
      - description: トレーサビリティID(UUID形式)。指定しない場合は自動生成されます
        explode: false
        in: header
        name: X-Trace-ID
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ユーザー作成成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUser_400_response'
          description: リクエスト形式が不正
      summary: 新規ユーザー作成
      tags:
      - users
  /users/{userId}:
    delete:
      description: 特定のユーザーを削除します
      operationId: deleteUser
      parameters:
      - description: トレーサビリティID(UUID形式)。指定しない場合は自動生成されます
        explode: false
        in: header
        name: X-Trace-ID
        required: false
        schema:
          type: string
        style: simple
      - description: ユーザーID
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: 削除成功
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserById_404_response'
          description: リソースが見つかりません
      summary: ユーザー削除
      tags:
      - users
    get:
      description: 特定のユーザーの詳細情報を取得します
      operationId: getUserById
      parameters:
      - description: トレーサビリティID(UUID形式)。指定しない場合は自動生成されます
        explode: false
        in: header
        name: X-Trace-ID
        required: false
        schema:
          type: string
        style: simple
      - description: ユーザーID
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: 成功
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserById_404_response'
          description: リソースが見つかりません
      summary: ユーザー情報取得
      tags:
      - users
    put:
      description: 特定のユーザーの情報を更新します
      operationId: updateUser
      parameters:
      - description: トレーサビリティID(UUID形式)。指定しない場合は自動生成されます
        explode: false
        in: header
        name: X-Trace-ID
        required: false
        schema:
          type: string
        style: simple
      - description: ユーザーID
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: 更新成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUser_400_response'
          description: リクエスト形式が不正
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserById_404_response'
          description: リソースが見つかりません
      summary: ユーザー情報更新
      tags:
      - users
components:
  responses:
    BadRequestError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createUser_400_response'
      description: リクエスト形式が不正
    NotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getUserById_404_response'
      description: リソースが見つかりません
  schemas:
    User:
      example:
        full_name: John Doe
        is_active: true
        id: 1
        email: user@example.com
        username: johndoe
      properties:
        id:
          example: 1
          title: id
          type: integer
        email:
          example: user@example.com
          format: email
          title: email
          type: string
        username:
          example: johndoe
          title: username
          type: string
        full_name:
          example: John Doe
          title: full_name
          type: string
        is_active:
          default: true
          title: is_active
          type: boolean
      required:
      - email
      - id
      - username
      title: User
      type: object
    UserCreate:
      example:
        password: strongpassword
        full_name: John Doe
        email: user@example.com
        username: johndoe
      properties:
        email:
          example: user@example.com
          format: email
          title: email
          type: string
        username:
          example: johndoe
          title: username
          type: string
        full_name:
          example: John Doe
          title: full_name
          type: string
        password:
          example: strongpassword
          format: password
          title: password
          type: string
      required:
      - email
      - password
      - username
      title: UserCreate
      type: object
    UserUpdate:
      example:
        full_name: John Doe
        email: user@example.com
        username: johndoe
      properties:
        email:
          example: user@example.com
          format: email
          title: email
          type: string
        username:
          example: johndoe
          title: username
          type: string
        full_name:
          example: John Doe
          title: full_name
          type: string
      title: UserUpdate
      type: object
    createUser_400_response_detail_inner:
      example:
        msg: msg
        loc:
        - loc
        - loc
        type: type
      properties:
        loc:
          items:
            type: string
          title: loc
          type: array
        msg:
          title: msg
          type: string
        type:
          title: type
          type: string
      title: createUser_400_response_detail_inner
      type: object
    createUser_400_response:
      example:
        detail:
        - msg: msg
          loc:
          - loc
          - loc
          type: type
        - msg: msg
          loc:
          - loc
          - loc
          type: type
      properties:
        detail:
          items:
            $ref: '#/components/schemas/createUser_400_response_detail_inner'
          title: detail
          type: array
      title: createUser_400_response
      type: object
    getUserById_404_response:
      example:
        detail: Item not found
      properties:
        detail:
          example: Item not found
          title: detail
          type: string
      title: getUserById_404_response
      type: object
